'''
클래스 = 객체를 설계하기 위한 설계도
클래스에는 객체가 가져야 할 속성과 행동이 있다.
속성: 클래스 내부에 정의된 변수(객체가 가지는 데이터)
메서드: 클래스 내부에 정의된 함수(객체가 수행할 수 있는 행동)

객체: 클래스라는 설계도를 토대로 만들어진 것
    e.g. 클래스는 와플 머신, 굽는 과정을 통해 얻은 완성된 객체가 와플
객체는 상태와 행동을 가진다
- tv상태      -tv행동
가격          볼륨올리기
색상          채널바꾸기
브랜드         전원끄기

행동
1. 능동적 행동
    tv를 켜고 / 끄고
2. 수동적 행동(능동적 행동의 결과값)
    tv가 꺼진 상태로 유지됨

- 쓰는 법
class 클래스 이름:
    생성자
    메서드

클래스 정의 규칙
1. 이름은 대문자로 시작한다.
2. 클래스 내부에 함수(이게 메서드)를 추가하여 향동을 정의한다.
3.

생성자
1. __init__ 메서드: 객체가 생성될 때 자동으로 호출되는 생성자이다.
2. 생성자에서는 객체의 초기 속성을 설정한다.(그러면 self가 자동으로 나옴)
3. self는 현재 생성되는 객체 자신을 가리키는 변수로 클래스 내부 메서드에서 항상 첫 매개변수로 전달된다.
'''

class Person:
    def __init__(self,name,age,nationality): # 속성
        self.name = name
        self.age = age
        self.nationality = nationality

    #밑의 행동이 메서드(메서드도 항상 self를 첫 매개변수로 받는다).
    def introduce(self):
        print(f"이름 : {self.name}, 나이 : {self.age}, 국적 : {self.nationality}")
        #🔼틀을 만들었다

person1 = Person("김아란", "20", "Korea")
person2 = Person("홍길동", "100", "USA")
person3 = Person("아무개", "18", "Japan")#얘네들이 생성될 때 위의 틀에 따라 생성됨

print(person1.name)
person1.introduce()#클래스를 토대로 만들어진, 객체가 사용하는 함수


"""
❤함수                ❤메서드
클래스 밖에 정의됨      클래스 안에서 정의됨
함수이름()            객체이름.메서드이름()*self필요

"""
